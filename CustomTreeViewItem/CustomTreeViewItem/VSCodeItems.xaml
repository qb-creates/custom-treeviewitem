<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomTreeViewItem">
    
    <Style TargetType="{x:Type local:VSCodeItems}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Margin" Value="-10000,0,0,0"/>
        <Setter Property="Width" Value="11000"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VSCodeItems}">
                    <Grid Margin="0,0,0,0" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        
                        <!--This Section is needed to show the childern of TreeViewItems-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!--My full border around the TreeView Item. Will Edit the border and background of this to show that a item has been selected. -->
                        <Border x:Name="PART_FullBorder" 
                                Grid.Column="0" Grid.ColumnSpan="3"
                                Width="11000"
                                Padding="0"
                                HorizontalAlignment="Left">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="true"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFocused}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="#44094771"/>
                                                <Setter Property="BorderBrush" Value="#AA04D9FF"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="true"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFocused}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="#22FFFFFF"/>
                                                <Setter Property="BorderBrush" Value="#22FFFFFF"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="true"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="false"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=PART_PresenterBorder, Path=IsMouseOver}" Value="true"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=PART_Expander, Path=IsMouseOver}" Value="true"/>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSelected}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightedColor}"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        
                        <!--My Expander Image. Defualts to a right and down arrow.-->
                        <Image x:Name="PART_Expander" Grid.Column="0" 
                               Margin="{TemplateBinding MarginThickness}" 
                               RenderOptions.BitmapScalingMode="HighQuality" 
                               Width="15" Height="15">
                        </Image>
                        
                        <!--My treeview item content-->
                        <Border x:Name="PART_PresenterBorder"
                                Grid.Column="1" 
                                Width="auto" 
                                HorizontalAlignment="Left" TextBlock.Foreground="{TemplateBinding TextColor}"
                                Margin="0,0,0,0">
                            <ContentPresenter x:Name="PART_Header"
                                            ContentSource="Header"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                        <Setter Property="MaxWidth" Value="200"/>
                                        <Setter Property="Padding" Value="0,2,0,2"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <DockPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                            <ItemsPresenter x:Name="ItemsHost"  Visibility="Collapsed" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>